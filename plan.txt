FORMULAS:

Mifflin-St Jeor Equation FOR (BMR - basal metabolic rate)
For men:
BMR = 10W + 6.25H - 5A + 5
For women:
BMR = 10W + 6.25H - 5A - 161

(the BMR above is the total calories needed to MAINTAIN YOUR WEIGHT considering you DONT WORKOUT)

W is body weight in kg
H is body height in cm
A is age
F is body fat in percentage

(if you DO WORKOUT times the BMR by the values below) = CAL.COUNT = daily calories count

Sedentary (little or no exercise): 1.2
Lightly active (light exercise/sports 1-3 days/week): 1.375
Moderately active (moderate exercise/sports 3-5 days/week): 1.55
Very active (hard exercise/sports 6-7 days a week): 1.725
Super active (very hard exercise & physical job or 2x training): 1.9

TO LOSE 0.45kg PER WEEK (CAL.COUNT - 500) - WEIGHT LOSS
TO LOSE 0.91kg PER WEEK (CAL.COUNT - 1000) - EXTREME WEIGHT LOSS
MAINTAIN WEIGHT = (BMR X ACTIVITY rate)
TO GAIN 0.45kg PER WEEK (CAL.COUNT + 500) - BULK 
TO GAIN 0.91kg PER WEEK (CAL.COUNT + 1000) - EXTREME BULK

---------------------------------------------------------------------------------------------------------------------------

OTHER IMPORTANT THINGS:

create a db file (calories.db) store a table for login info
sudo apt-get update
sudo apt-get install sqlite3
sqlite3 --version
sqlite3 cal.db
CREATE TABLE users (
    id INTEGER PRIMARY KEY,
    name TEXT,
    email TEXT
);
password -> stored cryptically, time the account was made


-----------------------------------------------------------------------------------------------------------------------------

store hashed passwords on the data-base
login required function 

db file containing calories for all common food items. (may have to incorporate multiple db file)

users table is the initial part which handles all the main info

a tick box to allow users to know more from us through emails.

----------------------------------------------------------------------------------------------------------------------------

FOOD TRACKING PLAN
allowing users to enter various food items through a search nd select bar.
adding this would add to the total caloric intake
a calories row in a new table where the total calories for the day.


------------------------------------------------------------------------

SET GOAL 
the selected calori amount will be inserted into a db table which will contain the following amount
1. a boolean suggesting whether the daily caloric goal has been achieved
2. amount left - which will be updated by subtracting the food calorie amount from the goal
3. food item and its calories

----------------------------------------------------------------------------------

progress.html ------> shows your currently set caloric goal and a circular progress tracker
tracker.html -----> works fine but i want the amount of searching options thru use of either multiple apis or a single api that contains all the required data, select on results should be next to the selected value
manual adder ------> add food items and their calories manually 
how does tracking work thru this searching and manual process -----> 

----------------------------------------------------------------------
1. manual calorie tracking manual.html 
2. improve searching food for calories tracker.html
3. these calories should be taken away from the daily caloric intake into a value caloric progress which should be displayed on progress .html
4. history.html to show all the calories and foods added 
5. 



--------------------------------------------------------------------------
FIXES
 1. when deleted food from history progress updates  done
2. searching
3. improved api for searching food
4. final additions







