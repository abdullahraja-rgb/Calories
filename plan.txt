# Formulas

## Mifflin-St Jeor Equation (BMR - Basal Metabolic Rate)
### For Men:
BMR = (10 × W) + (6.25 × H) - (5 × A) + 5

### For Women:
BMR = (10 × W) + (6.25 × H) - (5 × A) - 161

*Note: BMR represents the total calories needed to **maintain your weight** assuming no exercise.*

**Variables:**
- **W** = Body weight (kg)
- **H** = Body height (cm)
- **A** = Age (years)
- **F** = Body fat percentage (not used in this formula)

### Adjusting BMR for Activity Level:
Multiply BMR by the corresponding value below to get **daily caloric intake (CAL.COUNT)**:

| Activity Level                           | Multiplication Factor |
|------------------------------------------|-----------------------|
| Sedentary (little or no exercise)       | 1.2                   |
| Lightly active (1-3 days/week)          | 1.375                 |
| Moderately active (3-5 days/week)       | 1.55                  |
| Very active (6-7 days/week)             | 1.725                 |
| Super active (hard training or job)     | 1.9                   |

### Adjusting CAL.COUNT for Goals:
| Goal                                   | Calculation          |
|----------------------------------------|----------------------|
| **Weight Loss (0.45kg/week)**          | CAL.COUNT - 500     |
| **Extreme Weight Loss (0.91kg/week)**  | CAL.COUNT - 1000    |
| **Maintain Weight**                    | BMR × Activity Rate |
| **Bulk (Gain 0.45kg/week)**            | CAL.COUNT + 500     |
| **Extreme Bulk (Gain 0.91kg/week)**    | CAL.COUNT + 1000    |

---

# Database Setup

### Create Database (`calories.db`):
```bash
sudo apt-get update
sudo apt-get install sqlite3
sqlite3 --version
sqlite3 calories.db
```

### Create Users Table:
```sql
CREATE TABLE users (
    id INTEGER PRIMARY KEY,
    name TEXT,
    email TEXT,
    password TEXT,  -- Stored securely (hashed)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
```

### Security Considerations:
- Store **hashed passwords** in the database.
- Implement **login authentication**.
- Include a **checkbox for email updates**.

---

# Food Tracking Plan

### **Functionality**:
1. Users can enter food items via **search and select bar**.
2. Selected food items contribute to **total daily caloric intake**.
3. A **calories row** in a new table will store daily total calories.

### **Database Table for Food Intake**:
```sql
CREATE TABLE food_tracking (
    id INTEGER PRIMARY KEY,
    user_id INTEGER,
    food_item TEXT,
    calories INTEGER,
    date_added TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
```

### **Set Goal Table**:
```sql
CREATE TABLE caloric_goals (
    id INTEGER PRIMARY KEY,
    user_id INTEGER,
    goal_calories INTEGER,
    calories_left INTEGER,
    achieved BOOLEAN DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
```

### **Goal Tracking**:
- **Boolean Field**: Tracks if the daily caloric goal is met.
- **Amount Left**: Updates dynamically as food calories are added.
- **Food Items**: Stored with respective calorie values.

---

# Web Pages

| Page Name       | Functionality Description |
|----------------|---------------------------|
| `progress.html` | Displays caloric goal and progress tracker. |
| `tracker.html`  | Improved food search with API integration. |
| `manual.html`   | Manually add food items and calories. |
| `history.html`  | Displays past food log and calorie history. |

### Improvements Needed:
1. **Better Food Searching**: Implement **multiple APIs** or a single **comprehensive API**.
2. **Selection Refinement**: Ensure **selected results appear next to the chosen value**.
3. **Manual Entry Support**: Allow users to **add food items manually**.
4. **Tracking Workflow**:
   - Calories tracked through **search/manual entry**.
   - Deducted from **daily caloric intake**.
   - Displayed in **progress.html**.
   - Saved in **history.html**.

---

# Fixes & Final Additions

### **Completed Fixes:**
✔ When deleting food from history, progress updates correctly.

### **Pending Fixes:**
- **Improve search functionality**.
- **Enhance API integration for food search**.
- **Finalize last feature additions**.

---





